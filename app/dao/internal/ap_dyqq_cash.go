// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
)

// ApDyqqCashDao is the manager for logic model data accessing and custom defined data operations functions management.
type ApDyqqCashDao struct {
	Table   string            // Table is the underlying table name of the DAO.
	Group   string            // Group is the database configuration group name of current DAO.
	Columns ApDyqqCashColumns // Columns is the short type for Columns, which contains all the column names of Table for convenient usage.
}

// ApDyqqCashColumns defines and stores column names for table ap_dyqq_cash.
type ApDyqqCashColumns struct {
	Id             string // 主键
	Uid            string //
	PaymentNo      string // 商户付款单号
	PartnerTradeNo string // 商户订单号
	CashOrder      string // 提现序列
	CashNum        string // 提现金额
	CreateAt       string // 提现时间
	PayTime        string // 支付成功时间
	Status         string // 提现状态:0:申请中;1:提现成功;2:提现失败
	Type           string // 货币类型: 0:红包币，1：音符币
	Reason         string // 提现失败原因
	IsDeleted      string // 是否删除；0:未删除；1:删除
	UpdateTime     string // 更新时间
	CreateTime     string // 插入时间
}

//  apDyqqCashColumns holds the columns for table ap_dyqq_cash.
var apDyqqCashColumns = ApDyqqCashColumns{
	Id:             "id",
	Uid:            "uid",
	PaymentNo:      "payment_no",
	PartnerTradeNo: "partner_trade_no",
	CashOrder:      "cash_order",
	CashNum:        "cash_num",
	CreateAt:       "create_at",
	PayTime:        "pay_time",
	Status:         "status",
	Type:           "type",
	Reason:         "reason",
	IsDeleted:      "is_deleted",
	UpdateTime:     "update_time",
	CreateTime:     "create_time",
}

// NewApDyqqCashDao creates and returns a new DAO object for table data access.
func NewApDyqqCashDao() *ApDyqqCashDao {
	return &ApDyqqCashDao{
		Group:   "default",
		Table:   "ap_dyqq_cash",
		Columns: apDyqqCashColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *ApDyqqCashDao) DB() gdb.DB {
	return g.DB(dao.Group)
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *ApDyqqCashDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.Table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *ApDyqqCashDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
